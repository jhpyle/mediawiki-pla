<?php
# This file was automatically generated by the MediaWiki 1.19.1-1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename      = "PLA Wiki";
$wgMetaNamespace = "PLA_Wiki";
$wgLocaltimezone = "America/New_York";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "https://wiki.philalegal.org";
$wgScriptExtension  = ".php";

## The protocol and server name to use in fully-qualified URLs
$wgServer           = "https://wiki.philalegal.org";

## The relative URL path to the skins directory
$wgStylePath        = "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "/pla_logo.png";

## UPO means: this is also a user preference option

$wgEnableEmail      = true;
$wgEnableUserEmail  = true; # UPO

$wgEmergencyContact = "jpyle@philalegal.org";
$wgPasswordSender   = "jpyle@philalegal.org";

$wgEnotifUserTalk      = false; # UPO
$wgEnotifWatchlist     = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype           = "mysql";
$wgDBserver         = "localhost";
$wgDBname           = "intakewikidb";
$wgDBuser           = "wikiuser";
$wgDBpassword       = "xxxsecretxxx";

# MySQL specific settings
$wgDBprefix         = "prime_";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = false;

## Shared memory settings
$wgMainCacheType    = CACHE_NONE;
$wgMemCachedServers = array();

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads  = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons  = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
#$wgHashedUploadDirectory = false;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/Names.php
$wgLanguageCode = "en";

$wgSecretKey = "4e213900b56993360asdfasdf56fc561e09fbaBLAHBLAHBLAHAafawefawrefe7608c72d10a";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "BLAHBLAHBLAH";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook', 'vector':
$wgDefaultSkin = "vector";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl  = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# Query string length limit for ResourceLoader. You should only set this if
# your web server has a query string length limit (then set it to that limit),
# or if you have suhosin.get.max_value_length set in php.ini (then set it to
# that value)
$wgResourceLoaderMaxQueryLength = -1;


# Enabled Extensions. Most extensions are enabled by including the base extension file here
# but check specific extension documentation for more details
# The following extensions were automatically enabled:


# End of automatically generated settings.
# Add more configuration options below.
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['sysop']['userrights'] = true;
$wgGroupPermissions['sysop']['edit'] = true;
$wgGroupPermissions['MLCP']['move'] = true;
$wgGroupPermissions['MLCP']['move-subpages'] = true;
$wgGroupPermissions['MLCP']['move-rootuserpages'] = true; // can move root userpages
$wgGroupPermissions['MLCP']['movefile'] = true;
$wgGroupPermissions['MLCP']['read'] = true;
$wgGroupPermissions['MLCP']['edit'] = true;
$wgGroupPermissions['MLCP']['createpage'] = true;
$wgGroupPermissions['MLCP']['createtalk'] = true;
$wgGroupPermissions['MLCP']['writeapi'] = true;
$wgGroupPermissions['MLCP']['upload'] = true;
$wgGroupPermissions['MLCP']['reupload'] = true;
$wgGroupPermissions['MLCP']['reupload-shared'] = true;
$wgGroupPermissions['MLCP']['minoredit'] = true;
$wgGroupPermissions['MLCP']['purge'] = true; // can use ?action=purge without clicking "ok"
$wgGroupPermissions['MLCP']['sendemail'] = true;
$wgGroupPermissions['MLCPSupervisors']['move'] = true;
$wgGroupPermissions['MLCPSupervisors']['move-subpages'] = true;
$wgGroupPermissions['MLCPSupervisors']['move-rootuserpages'] = true; // can move root userpages
$wgGroupPermissions['MLCPSupervisors']['movefile'] = true;
$wgGroupPermissions['MLCPSupervisors']['read'] = true;
$wgGroupPermissions['MLCPSupervisors']['edit'] = true;
$wgGroupPermissions['MLCPSupervisors']['createpage'] = true;
$wgGroupPermissions['MLCPSupervisors']['createtalk'] = true;
$wgGroupPermissions['MLCPSupervisors']['writeapi'] = true;
$wgGroupPermissions['MLCPSupervisors']['upload'] = true;
$wgGroupPermissions['MLCPSupervisors']['reupload'] = true;
$wgGroupPermissions['MLCPSupervisors']['reupload-shared'] = true;
$wgGroupPermissions['MLCPSupervisors']['minoredit'] = true;
$wgGroupPermissions['MLCPSupervisors']['purge'] = true; // can use ?action=purge without clicking "ok"
$wgGroupPermissions['MLCPSupervisors']['sendemail'] = true;

$wgGroupPermissions['MLCPAll']['move'] = true;
$wgGroupPermissions['MLCPAll']['move-subpages'] = true;
$wgGroupPermissions['MLCPAll']['move-rootuserpages'] = true; // can move root userpages
$wgGroupPermissions['MLCPAll']['movefile'] = true;
$wgGroupPermissions['MLCPAll']['read'] = true;
$wgGroupPermissions['MLCPAll']['edit'] = true;
$wgGroupPermissions['MLCPAll']['createpage'] = true;
$wgGroupPermissions['MLCPAll']['createtalk'] = true;
$wgGroupPermissions['MLCPAll']['writeapi'] = true;
$wgGroupPermissions['MLCPAll']['upload'] = true;
$wgGroupPermissions['MLCPAll']['reupload'] = true;
$wgGroupPermissions['MLCPAll']['reupload-shared'] = true;
$wgGroupPermissions['MLCPAll']['minoredit'] = true;
$wgGroupPermissions['MLCPAll']['purge'] = true; // can use ?action=purge without clicking "ok"
$wgGroupPermissions['MLCPAll']['sendemail'] = true;
$wgGroupPermissions['Hotline']['move'] = true;
$wgGroupPermissions['Hotline']['move-subpages'] = true;
$wgGroupPermissions['Hotline']['move-rootuserpages'] = true; // can move root userpages
$wgGroupPermissions['Hotline']['movefile'] = true;
$wgGroupPermissions['Hotline']['read'] = true;
$wgGroupPermissions['Hotline']['edit'] = true;
$wgGroupPermissions['Hotline']['createpage'] = true;
$wgGroupPermissions['Hotline']['createtalk'] = true;
$wgGroupPermissions['Hotline']['writeapi'] = true;
$wgGroupPermissions['Hotline']['upload'] = true;
$wgGroupPermissions['Hotline']['reupload'] = true;
$wgGroupPermissions['Hotline']['reupload-shared'] = true;
$wgGroupPermissions['Hotline']['minoredit'] = true;
$wgGroupPermissions['Hotline']['purge'] = true; // can use ?action=purge without clicking "ok"
$wgGroupPermissions['Hotline']['sendemail'] = true;
$wgGroupPermissions['WebEditors']['protect'] = true;
$wgGroupPermissions['WebEditors']['editinterface'] = true;
$wgFileExtensions = array('png', 'gif', 'jpg', 'jpeg', 'doc', 'xls', 'mpp', 'pdf', 'ppt', 'tiff', 'bmp', 'docx', 'xlsx', 'pptx', 'ps', 'svg', 'dotx', 'dot', 'zip', 'eps', 'rtf');
$wgStrictFileExtensions = false;
$wgSearchType = 'SphinxMWSearch';
$wgEnableMWSuggest = true;
$wgEnableSphinxPrefixSearch = true;
$wgSphinxSearch_index = "wiki_main";
$wgSphinxSearch_index_list = "wiki_main,wiki_incremental";
require_once( "$IP/extensions/SphinxSearch/SphinxSearch.php" );
require( "$IP/extensions/DynamicSidebar/DynamicSidebar.php" );
$wgDynamicSidebarUseGroups = true;

require_once( "$IP/extensions/LdapAuthentication/LdapAutoAuthentication.php" );
require_once( "$IP/extensions/LdapAuthentication/LdapAuthentication.php" );

//$wgAuth = new LdapAuthenticationPlugin();

$wgLDAPDebug = 1;
$wgDebugLogGroups['ldap'] = '/tmp/ldap.log';

$wgLDAPActiveDirectory = array(
  'PHILALEGAL' => true,
);
 
$wgLDAPDomainNames = array(
  'PHILALEGAL'
);
 
$wgLDAPServerNames = array(
  'PHILALEGAL' => '192.168.200.153'
);
 
$wgLDAPSearchStrings = array(
  'PHILALEGAL' => 'PHILALEGAL\\USER-NAME'
);
 
$wgLDAPEncryptionType = array(
  'PHILALEGAL' => 'clear'
);
 
$wgLDAPUseLocal = false;
$wgMinimalPasswordLength = 1;

$wgLDAPBaseDNs = array(
  'PHILALEGAL' => 'dc=philalegal,dc=local'
);
 
$wgLDAPSearchAttributes = array(
  'PHILALEGAL' => 'sAMAccountName' );

$wgLDAPProxyAgent =  array(
  'PHILALEGAL' => 'cn=Jonathan Pyle,ou=Unrestricted GP,dc=philalegal,dc=local'
);
 
$wgLDAPProxyAgentPassword = array(
  'PHILALEGAL' => 'XXXSECRETXXX'
);

$wgLDAPUseLDAPGroups = array(
  'PHILALEGAL' => true,
);

// $wgLDAPGroupUseFullDN = array(
//   'PHILALEGAL' => true,
// );
 
$wgLDAPLowerCaseUsername = array(
  'PHILALEGAL' => true,
);
 
// The objectclass of the groups we want to search for
$wgLDAPGroupObjectclass = array(
  'PHILALEGAL' => 'group',
);
 
// The attribute used for group members
$wgLDAPGroupAttribute = array(
  'PHILALEGAL' => 'member',
);
 
// The naming attribute of the group
$wgLDAPGroupNameAttribute = array(
  'PHILALEGAL' => 'cn',
);
 
//$wgLDAPGroupsUseMemberOf = array(
// 'PHILALEGAL' => true,
//);

$wgGroupSearchNestedGroups = array(
  'PHILALEGAL' => true
);

//$wgGroupUseRetrievedUsername = array(
//  'PHILALEGAL' => true
//);

// $wgLDAPGroupsPrevail = array(
//   'PHILALEGAL' => true
// ); 

// 18:17:46 is nonauto
// 18:19:03 is auto with memberOf
// 18:20:03 is auto without memberOf

//change: $this->userLDAPGroups = $this->searchGroups( $usertopass );
//to: $this->userLDAPGroups = $this->searchGroups( $this->getUserDN( $usertopass, 1 ) );
						

$wgLDAPAutoAuthDomain = "PHILALEGAL";
#$wgLDAPAutoAuthUsername = $_SERVER["REMOTE_USER"];
if (isset($_SERVER["REMOTE_USER"])) $wgLDAPAutoAuthUsername = preg_replace( '/@.*/', '', strtolower($_SERVER["REMOTE_USER"]));

AutoAuthSetup();

require_once "$IP/extensions/WikiEditor/WikiEditor.php";

# Enables use of WikiEditor by default but still allow users to disable it in preferences
$wgDefaultUserOptions['usebetatoolbar'] = 1;
$wgDefaultUserOptions['usebetatoolbar-cgd'] = 1;
 
# Displays the Preview and Changes tabs
$wgDefaultUserOptions['wikieditor-preview'] = 1;
 
# Displays the Publish and Cancel buttons on the top right side
$wgDefaultUserOptions['wikieditor-publish'] = 0;

require_once("$IP/extensions/Cite/Cite.php");

$wgCookieExpiration = 94608000;
require_once "$IP/extensions/UserMerge/UserMerge.php";
$wgGroupPermissions['bureaucrat']['usermerge'] = true;
#require_once("$IP/extensions/PdfExport/PdfExport.php");
#$wgPdfExportHtmlDocPath = '/usr/bin/htmldoc';
require_once("$IP/extensions/Collection/Collection.php");
$wgCollectionFormats = array(
    'rl' => 'PDF', # enabled by default
#    'odf' => 'ODT',
#    'docbook' => 'DocBook XML',
#    'xhtml' => 'XHTML 1.0 Transitional',
#    'epub' => 'e-book (EPUB)',
#    'zim' => 'Kiwix (OpenZIM)',
);
$wgCollectionPODPartners = false;
$wgCollectionMaxArticles = 500; # default value
$wgCollectionMWServeURL = 'http://wiki.philalegal.org:8899/cache';
$wgCollectionMWServeCredentials = "jpyle:xxxsecretxxx";
$wgGroupPermissions['*']['collectionsaveasuserpage'] = true;
$wgGroupPermissions['*']['collectionsaveascommunitypage'] = true;
require_once("$IP/extensions/Widgets/Widgets.php");
$wgUseTidy = true;
$wgTidyBin = "/usr/bin/tidy";
$wgTidyInternal = false;
$wgTidyConf = $IP.'/includes/tidy.conf';
require_once( "$IP/extensions/ParserFunctions/ParserFunctions.php" );
$wgMSU_ShowAutoKat = false;     #autocategorisation
$wgMSU_CheckedAutoKat = false;  #checkbox for autocategorisation checked
$wgMSU_debug = false;           #debug mode 
$wgMSU_ImgParams = '400px';     #default max-size for inserted image
$wgMSU_UseDragDrop = true;      #show drag&drop area
require_once "$IP/extensions/MsUpload/msupload.php";
$wgVerifyMimeType = false;
$wgShowSQLErrors = 1;
#require_once "$IP/extensions/Parsoid/Parsoid.php";
#require_once "$IP/extensions/VisualEditor/VisualEditor.php";
#$wgDefaultUserOptions['visualeditor-enable'] = 1;
#$wgHiddenPrefs[] = 'visualeditor-enable';
require_once "$IP/extensions/TitleKey/TitleKey.php";
require_once "$IP/extensions/LabeledSectionTransclusion/lst.php";
$EXT = "$IP/extensions";
require_once "$EXT/Babel/Babel.php";
 
require_once "$EXT/cldr/cldr.php";
 
require_once "$EXT/CleanChanges/CleanChanges.php";
$wgCCTrailerFilter = true;
$wgCCUserFilter = false;
$wgDefaultUserOptions['usenewrc'] = 1;
 
require_once "$EXT/LocalisationUpdate/LocalisationUpdate.php";
$wgLocalisationUpdateDirectory = "$IP/cache";
 
require_once "$EXT/Translate/Translate.php";
$wgGroupPermissions['user']['translate'] = true;
$wgGroupPermissions['user']['translate-messagereview'] = true;
$wgGroupPermissions['user']['translate-groupreview'] = true;
$wgGroupPermissions['user']['translate-import'] = true;
$wgGroupPermissions['sysop']['pagetranslation'] = true;
$wgGroupPermissions['sysop']['translate-manage'] = true;
$wgTranslateDocumentationLanguageCode = 'qqq';
$wgExtraLanguageNames['qqq'] = 'Message documentation'; # No linguistic content. Used for documenting messages

require_once "$EXT/UniversalLanguageSelector/UniversalLanguageSelector.php";
$GLOBALS['wgTranslateFuzzyBotName'] = 'FuzzyBot';
$GLOBALS['wgTranslateLanguageFallbacks'] = array();
$GLOBALS['wgTranslateTranslationServices'] = array();
$GLOBALS['wgTranslateTranslationServices']['TTMServer'] = array(
	'database' => false, // Passed to wfGetDB
	'cutoff' => 0.75,
	'type' => 'ttmserver',
	'public' => false,
);
$GLOBALS['wgTranslateTranslationServices']['Yandex'] = array(
	'url' => 'https://translate.yandex.net/api/v1.5/tr.json/translate',
	'key' => 'trnsl.1.1.20150201T172111Z.9c453de36dff3d2e.8af4ea09161687e46f44fbd1dba4dee58b97f264',
	'pairs' => 'https://translate.yandex.net/api/v1.5/tr.json/getLangs',
	'timeout' => 3,
	'langorder' => array( 'es' ),
	'langlimit' => 1,
	'type' => 'yandex',
);
$GLOBALS['wgTranslateTasks'] = array(
	'view' => 'ViewMessagesTask',
	'untranslated' => 'ViewUntranslatedTask',
	'optional' => 'ViewOptionalTask',
	'acceptqueue' => 'AcceptQueueMessagesTask',
	'reviewall' => 'ReviewAllMessagesTask',
	'export-as-po' => 'ExportasPoMessagesTask',
	'export-to-file' => 'ExportToFileMessagesTask',
	'custom' => 'CustomFilteredMessagesTask',
);
$GLOBALS['wgTranslateSupportUrl'] = false;
$GLOBALS['wgTranslatePermissionUrl'] = 'Project:Translator';
$GLOBALS['wgTranslateSecondaryPermissionUrl'] = 'Project:Translator';
$GLOBALS['wgEnablePageTranslation'] = true;
$GLOBALS['wgPageTranslationNamespace'] = 1198;
$GLOBALS['wgTranslatePageMigration'] = true;
$GLOBALS['wgTranslatePageTranslationULS'] = true;
enableSemantics( 'wiki.philalegal.org' );
require_once "$IP/extensions/YouTube/YouTube.php";
$wgRawHtml = true;
$wgSearchSuggestCacheExpiry = 1;
define( "NS_PORTAL", 100 );
define( "NS_PORTAL_TALK", 101 );
$wgExtraNamespaces[NS_PORTAL] = "Portal";
$wgExtraNamespaces[NS_PORTAL_TALK] = "Portal_talk";
require_once "$IP/extensions/Interwiki/Interwiki.php";
$wgGroupPermissions['sysop']['interwiki'] = true;
require_once "$IP/extensions/SyntaxHighlight_GeSHi/SyntaxHighlight_GeSHi.php";
require_once "$IP/extensions/CodeEditor/CodeEditor.php";
require_once "$IP/extensions/Scribunto/Scribunto.php";
$wgScribuntoDefaultEngine = 'luastandalone';
$wgScribuntoUseGeSHi = true;
$wgScribuntoUseCodeEditor = true;
$wgShowExceptionDetails = true;
require_once "$IP/extensions/MobileFrontend/MobileFrontend.php";
$wgMFAutodetectMobileView = true;
require_once "$IP/extensions/Mantle/Mantle.php";
$wgFavicon = "https://docket.philalegal.org/data/favicon.ico";
$wgMimeDetectorCommand = "file -bi";
require_once "$IP/extensions/PdfHandler/PdfHandler.php";
